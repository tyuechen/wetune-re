dependencies {
    implementation project(":common")
    implementation project(":sql")
    implementation project(":stmt")
    implementation project(":superopt")
    implementation('com.google.guava:guava:29.0-jre')
    implementation('org.apache.commons:commons-lang3:3.10')
    implementation('org.jetbrains:annotations:16.0.2')
    implementation('net.sf.trove4j:trove4j:3.0.3')
    implementation('org.apache.commons:commons-math3:3.6.1')
    implementation('mysql:mysql-connector-java:8.0.21')
    implementation('org.postgresql:postgresql:42.2.19')
    implementation("com.microsoft.sqlserver:mssql-jdbc:9.2.1.jre8")
    implementation('com.zaxxer:HikariCP:4.0.3')
    implementation('me.tongfei:progressbar:0.9.2')

    // version 1.27 import `log4j`
    // v 1.19 do not import `log4j`,
    // but has bug on loading class `Class.forName("net.sf.log4jdbc.DriverSpy")`
    implementation('org.apache.calcite:calcite-core:1.27.0')

    implementation("com.googlecode.log4jdbc:log4jdbc:1.2")
    //implementation("log4j:log4j:1.2.17")
    implementation('org.slf4j:slf4j-api:1.7.36')
    implementation("org.slf4j:slf4j-log4j12:1.7.36") {
        // exclude `ch.qos.reload4j:reload4j:1.2.19` conflicts with log4j:1.2.17
        exclude group: "ch.qos.reload4j", module: "reload4j"
    }
    //implementation("org.slf4j:slf4j-reload4j:1.7.36") // same package as above

}

task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainModule = 'wtune.testbed'
    mainClass = 'wtune.testbed.Entry'
    modularity.inferModulePath = false
    jvmArgs += ['--module-path', classpath.asPath]
}

